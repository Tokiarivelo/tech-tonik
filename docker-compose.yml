ervices:
  web:
    build:
      context: .
      dockerfile: Dockerfile.web.dev
    container_name: web_dev
    volumes:
      - ./apps/web:/workspace/apps/web
      - /workspace/apps/web/node_modules
    working_dir: /workspace/apps/web
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=development
    command: pnpm dev

  graphql:
    build:
      context: .
      dockerfile: Dockerfile.graphql.dev
    container_name: graphql_dev
    volumes:
      - ./apps/graphql:/workspace/apps/graphql
      - /workspace/apps/graphql/node_modules
    working_dir: /workspace/apps/graphql
    ports:
      - '4000:4000'
    environment:
      - NODE_ENV=development
    command: pnpm start:dev

  mysql-db:
    image: mysql:8.0
    container_name: mysql-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: mydb
      MYSQL_USER: myuser
      MYSQL_PASSWORD: mypassword
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql

  mysql-client:
    image: phpmyadmin/phpmyadmin
    container_name: mysql-client
    restart: unless-stopped
    environment:
      PMA_HOST: mysql-db
      PMA_USER: root
      PMA_PASSWORD: rootpassword
    ports:
      - "8080:80"
    depends_on:
      - mysql-db

volumes:
  mysql-data:
